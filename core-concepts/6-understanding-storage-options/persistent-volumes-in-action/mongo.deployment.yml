apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
# The reclaim policy applies to the persistent volumes, not the storage itself.
# pv's and pvc's that are created using that storage class will inherit the reclaim policy set here.
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  local:
    path: /c/temp/data/db
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
            - docker-desktop

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mongo
  name: mongo
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        ports:
        - containerPort: 27017
        command:
        - mongod
        - "--auth"
        resources: {}
        volumeMounts:
        - name: mongo-volume
          mountPath: /data/db
        env:
          - name: MONGODB_DBNAME
            valueFrom:
              configMapKeyRef:
                key: MONGODB_DBNAME
                name: mongo-env
          - name: MONGODB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: MONGODB_PASSWORD
                name: mongo-env
          - name: MONGODB_ROLE
            valueFrom:
              configMapKeyRef:
                key: MONGODB_ROLE
                name: mongo-env
          - name: MONGODB_USERNAME
            valueFrom:
              configMapKeyRef:
                key: MONGODB_USERNAME
                name: mongo-env
      volumes:
        - name: mongo-volume
          persistentVolumeClaim:
            claimName: mongo-pvc

---

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: mongo-env
  name: mongo-env
data:
  # property-like keys; each key maps to a simple value
  MONGODB_DBNAME: databarse
  MONGODB_PASSWORD: password #not a good idea to store a password in a ConfigMap (demo only).
  MONGODB_ROLE: readWrite
  MONGODB_ROOT_PASSWORD: password #not a good idea to store a password in a ConfigMap (demo only).
  MONGODB_ROOT_ROLE: root
  MONGODB_ROOT_USERNAME: dbadmin
  MONGODB_USERNAME: webrole